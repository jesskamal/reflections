When would you want to use a remote repository rather than keeping all your work
local?

When you are collaborating with others who are also working on the same files. Also if you are using a computer that is not your own.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

If you are collaborating with others, you don't have to check what has been changed manually, if you pull changes, you automatically have the most up-to-date code. Also, it seems easier logistically to manage locally and push changes, rather than having to use the site.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

Clones are used to clone either a local or a remote repository. Forks are used to clone a repository from someone else to my GitHub account specifically. Branches are separate tracks of commits to use the same master as base and try different code.

What is the benefit of having a copy of the last known state of the remote
stored locally?

If you are working offline, you can still see the status of the remote directory and track changes. You don't have to refer to the remote copy as frequently when others are making continual updates, you can just see the changes at the time you need them.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

I suppose I would have to either email or slack the files back and forth, while saving the different versions of the file and commenting the changes, or I would have to use an online collaboration tool like Google Docs. It would be easier to make changes and identify them quickly. It would be more difficult to keep track of many different changes among many different collaborators.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

It makes sense to make changes in a separate branch in cases where you are testing out different code for different cases, or if you are collaborating remotely. When you make changes to a separate branch, multiple people can do the same, and review and approve the changes first, without affecting changes that have been made otherwise to the master branch. However making changes directly in master seems much easier, with less steps to follow, but more room for conflict with multiple collaborators.
